name: Deploy

on:
  push:
    tags:
      - 'v*'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:


jobs:
  # deploy-snap:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v2
  #   - uses: snapcore/action-build@v1
  #     id: snapcraft
  #   - run: |
  #       echo ${{secrets.SNAPCRAFT_TOKEN}} | snapcraft login --with -
  #       snapcraft upload ${{steps.snapcraft.outputs.snap}}
  #   - uses: actions/upload-artifact@v2
  #     with:
  #       name: snap
  #       path: ${{steps.snapcraft.outputs.snap}}
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./uet_lms_app
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          token: ${{ secrets.PAT }}
      - uses: actions/setup-java@v1
        with:
          java-version: '8.x'
      - uses: subosito/flutter-action@v1
        with:
          flutter-version: '1.22.6'
      # - name: Enable Linux & Web
      #   run: | 
      #     flutter config --enable-linux-desktop
      #     flutter config --enable-web

      - name: Get Deps for API
        run: flutter pub get
        working-directory: ./uet_lms_api 

      - name: Get Deps for App
        run: flutter pub get

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}
      - name: Prepare Android Build
        run: bash scripts/decrypt_android_signingkey.sh
        env:
          SIGNING_KEY_DECRPTION_PASSPHRASE: ${{ secrets.SIGNING_KEY_DECRPTION_PASSPHRASE }}
          KEY_PASSPHRASE: ${{ secrets.KEY_PASSPHRASE }}

      - name: Build Android
        run: flutter build appbundle

      - uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.talhabalaj.uet_lms
          releaseFiles: ./uet_lms_app/build/app/outputs/bundle/release/app-release.aab
          track: internal
      # temporarily removed uuntil flutter linux support is stable
      #
      # - run: sudo apt-get install clang cmake ninja-build pkg-config libgtk-3-dev libblkid-dev liblzma-dev libjsoncpp-dev libsecret-1-dev
      #   name: Install Dependencies for Linux
      
      # - run: scripts/make_appimage
      #   working-directory: ./uet_lms_app
      #   name: Build App Image
      
      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
      #   with:
      #     tag_name: ${{ steps.get_version.outputs.VERSION }}
      #     release_name: Release ${{ steps.get_version.outputs.VERSION }}
      #     body: A new update.
      #     draft: false
      #     prerelease: true 

      # - id: upload-release-asset 
      #   uses: actions/upload-release-asset@v1
      #   name: Upload .zsync
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
      #     asset_path: ./uet_lms_app/UET_LMS-x86_64.AppImage.zsync
      #     asset_name: UET_LMS-x86_64.AppImage.zsync
      #     asset_content_type: application/octet-stream

      # - id: upload-release-asset-2 
      #   uses: actions/upload-release-asset@v1
      #   name: Upload .AppImage
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }} 
      #     asset_path: ./uet_lms_app/UET_LMS-x86_64.AppImage
      #     asset_name: UET_LMS-x86_64.AppImage
      #     asset_content_type: application/octet-stream

      # - run: flutter build web --web-renderer canvaskit --pwa-strategy none 
      #   name: Build Web
      #   working-directory: ./uet_lms_app/
      # - name: Deploy to Firebase
      #   uses: w9jds/firebase-action@master
      #   with: 
      #     args: deploy --only hosting
      #   env:
      #     FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      #     PROJECT_PATH: ./uet_lms_app/
